#!/bin/bash

### BEGIN INIT INFO
# Provides: APPLICATION
# Required-Start: $all
# Required-Stop: $network $local_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start the <%=node['redmine']['app_name']%> unicorns at boot
# Description: Enable <%=node['redmine']['app_name']%> at boot time.
### END INIT INFO
#
# Use this as a basis for your own Unicorn init script.
# Change <%=node['redmine']['app_name']%> to match your app.
# Make sure that all paths are correct.

set -u
set -e

# Change these to match your app:
APP_NAME="<%=node['redmine']['app_name']%>"
APP_ROOT="<%=node['redmine']['app_path']%>"
PID="<%=node['redmine']['unicorn_conf']['pid']%>"
ENV="<%=node['redmine']['rails_env']%>"

GEM_HOME="~<%=node['redmine']['rvm_user']%>/.rvm/gems/<%=node['redmine']['ruby']%>"

UNICORN_OPTS="-D -E $ENV -c $APP_ROOT/config/unicorn.rb"

SET_PATH="cd $APP_ROOT; rvm use <%=node['redmine']['ruby']%>; export GEM_HOME=$GEM_HOME"
CMD="$SET_PATH; $GEM_HOME/bin/unicorn $UNICORN_OPTS"

old_pid="$PID.oldbin"

cd $APP_ROOT || exit 1

[ -d `dirname $PID` ] || mkdir `dirname $PID`
chown -R <%=node['redmine']['owner']%>:<%=node['redmine']['group']%> `dirname $PID`

sig () {
test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
test -s $old_pid && kill -$1 `cat $old_pid`
}

case ${1-help} in
start)
sig 0 && echo >&2 "Already running" && exit 0
su - <%=node['redmine']['rvm_user']%> -c "$CMD"
;;
stop)
sig QUIT && exit 0
echo >&2 "Not running"
;;
force-stop)
sig TERM && exit 0
echo >&2 "Not running"
;;
restart|reload)
sig HUP && echo reloaded OK && exit 0
echo >&2 "Couldn't reload, starting '$CMD' instead"
su - <%=node['redmine']['rvm_user']%> -c "$CMD"
;;
upgrade)
sig USR2 && exit 0
echo >&2 "Couldn't upgrade, starting '$CMD' instead"
su - <%=node['redmine']['rvm_user']%> -c "$CMD"
;;
rotate)
sig USR1 && echo rotated logs OK && exit 0
echo >&2 "Couldn't rotate logs" && exit 1
;;
*)
echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
exit 1
;;
esac
